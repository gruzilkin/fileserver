version: '3.8'

services:
  cassandra:
    image: cassandra:4
    ports:
      - "9042:9042"
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60

  db:
    image: postgres:14
    ports:
      - "5432:5432"
    env_file:
      - .env.default
      - .env
    restart: always

  cache:
    build: redis
    env_file:
      - .env.default
      - .env
    restart: always

  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka1:
    image: 'confluentinc/cp-kafka:latest'
    depends_on:
      - zookeeper
    env_file:
      - .env.default
      - .env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092

  kafka2:
    image: 'confluentinc/cp-kafka:latest'
    depends_on:
      - zookeeper
    env_file:
      - .env.default
      - .env
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092

  kafka3:
    image: 'confluentinc/cp-kafka:latest'
    depends_on:
      - zookeeper
    env_file:
      - .env.default
      - .env
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092

  blockstorage:
    build:
      dockerfile: blockstorage.dockerfile
    env_file:
      - .env.default
      - .env
    environment:
      - CASSANDRA_CONTACT_POINTS=cassandra
      - SPRING_DATA_REDIS_HOST=cache
      - SPRING_KAFKA_CONSUMER_GROUP_ID=fileserver
    restart: always
    depends_on:
      cassandra:
        condition: service_healthy
      cache:
        condition: service_started

  metastorage:
    build:
      dockerfile: metadata.dockerfile
    ports:
      - "9090:9090"
    restart: always
    env_file:
      - .env.default
      - .env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/fileserver
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=secret
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_KAFKA_CONSUMER_GROUP_ID=fileserver
    depends_on:
      - db

  web:
    build:
      dockerfile: web.dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env.default
      - .env
    environment:
      - BLOCK_STORAGE_HOST=blockstorage
      - META_STORAGE_HOST=metastorage
    restart: always
    depends_on:
      - blockstorage

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"